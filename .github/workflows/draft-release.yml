#*******************************************************************************
#  gh-pages.yml
#
# Github Workflow to deploy Interlisp.org.
#
# Interlisp.org is a Hugo based static website that contains a 
# detailed bibliography maintained using Zotero (https://www.zotero.org/groups/2914042/interlispwww.zotero.org/).
#
# This workflow consists of two jobs, one to ensure that we have the latest
# version of the Zotero bibliography and a second job to deploy the website.
#
# The workflow is executed either on a push or via scheduled run times.  When
# started at a scheduled run time we only do a deploy if the cached bibliography
# is no longer current.  On a push, we always verifty the the current
# bibliography is loaded and deploy a new version of the website.
#
# 2023-10-20 Bill Stumbo
#
# Copyright 2023 by Interlisp.org
#
# ******************************************************************************
name: github pages

#
# Manually dispatch the workflow on a specified branch.
on:
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash
      
jobs:
  # ----------------------------------------------------------------------------
  # Use the Zotero REST API to get the current version of the Zotero Bibliography
  # Compare against a cached version of the bibliography.
  #
  draftCheck:
    outputs:
      zoteroVersion: ${{ fromJson(steps.zoteroVersion.outputs.headers).last-modified-version }}
      cacheHit: ${{ steps.cache-zotero-bib.outputs.cache-hit }}
    runs-on: ubuntu-latest
    concurrency:
      group:  ${{ github.workflow }}-${{ github.ref }}
    steps:

      - name: Get Zotero Version Information
        id: zoteroVersion
        uses: fjogeleit/http-request-action@v1
        with:
          url: "https://api.zotero.org/groups/2914042/items?format=versions"
          method: "GET"
        
      - name: Cache Zotero Bibliography
        id: cache-zotero-bib
        uses: actions/cache@v3
        env:
          cache-name: cache-zotero_bib
        with:
          path: ~/data
          key: ${{ fromJson(steps.zoteroVersion.outputs.headers).last-modified-version }}
          restore-keys: |
            ${{ fromJson(steps.zoteroVersion.outputs.headers).last-modified-version }}

  # ----------------------------------------------------------------------------
  # Deploy draft website.  
  #      
  draftDeploy:
    needs: draftCheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache Zotero Bibliography
        id: cache-zotero-bib
        uses: actions/cache@v3
        env:
          cache-name: cache-zotero_bib
        with:
          path: ~/data
          key: ${{ needs.check.outputs.zoteroVersion }}
          restore-keys: |
            ${{ needs.check.outputs.zoteroVersion }}

      - name: Install Bibliography
        env:
          CACHE_HIT: ${{ steps.cache-zotero-bib.outputs.cache-hit }}
        run: |
          if [[ "$CACHE_HIT" == 'true' ]]; then
            echo "Use Cache"
            sudo cp --recursive ~/data ${GITHUB_WORKSPACE}
            ls -la ${GITHUB_WORKSPACE}/data
          else
            echo "Retrieve bibliography"
            cd scripts
            chmod +x ./update_bibliography.sh
            ./update_bibliography.sh
            sudo cp --recursive ${GITHUB_WORKSPACE}/data ~/data
          fi 

      - name: Install Hugo CLI
        env:
          HUGO_VERSION: 0.120.4
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb 

      # - name: Setup Hugo
      #   uses: peaceiris/actions-hugo@v2
      #   with:
      #     hugo-version: 'latest'
      #     extended: true

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      
      - run: npm install -g autoprefixer --save-dev  
      - run: npm install -g postcss-cli --save-dev
      - run: npm install --verbose

      - name: Build
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: development
          HUGO_ENV: development
        run: |
          hugo \
            --gc \
            --debug \
            --baseURL "draft"  

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./public  

    #    deploy:
    # environment:
    #   name: github-pages
    #   url: ${{ steps.deployment.outputs.page_url }}
    # runs-on: ubuntu-latest
    # needs: build
    # steps:
      - name: Deploy to GitHub Pages
        env:
          name: github-pages
          url: draft

        id: deployment
        uses: actions/deploy-pages@v2  

      # - name: Deploy
      #   uses: peaceiris/actions-gh-pages@v3
      #   if: github.ref == 'refs/heads/main'
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: ./public
